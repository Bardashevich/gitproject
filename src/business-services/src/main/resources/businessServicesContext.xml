<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jndi="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <import resource="classpath*:securityServicesContext.xml"/>

    <context:component-scan base-package="com.itechart.security.business"/>

    <aop:aspectj-autoproxy/>
    <tx:annotation-driven/>

    <jndi:jndi-lookup id="dataSource" jndi-name="${business.datasource.jndi}"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.itechart.security.business.model.persistent"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="security.filter_factory_provider">
                    com.itechart.security.hibernate.filter.FilterFactoryProviderImpl
                </prop>
                <!-- for development mode-->
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean name="smgProfileMapService" class="com.itechart.security.business.service.impl.SmgProfileMapServiceImpl"/>
    <bean name="contactService" class="com.itechart.security.business.service.impl.ContactServiceImpl"/>
    <bean name="companyService" class="com.itechart.security.business.service.impl.CompanyServiceImpl"/>
    <bean name="parsingService" class="com.itechart.security.business.service.impl.ParsingServiceImpl"/>

    <bean id="fileServiceImpl" class="com.itechart.security.business.service.impl.FileServiceImpl">
        <property name="uploadDir" value="${upload.dir}"/>
    </bean>

    <bean id="linkedinServiceImpl" class="com.itechart.security.business.service.impl.LinkedInServiceImpl">
        <property name="linkedinUserLogin" value="${linkedin.user.login}"/>
        <property name="linkedinUserPassword" value="${linkedin.user.password}"/>
    </bean>

    <bean id="reportServiceImpl" class="com.itechart.security.business.service.impl.ReportServiceImpl">
        <property name="templatePath" value="${report.template.path}"/>
        <property name="dateFormatPattern" value="${report.date.format.pattern}"/>
        <property name="masterTemplateFile" value="${report.master.template.file}"/>
        <property name="emailTemplateFile" value="${report.email.template.file}"/>
        <property name="educationTemplateFile" value="${report.education.template.file}"/>
        <property name="profExperienceFile" value="${report.prof.experience.template.file}"/>
        <property name="vacanciesTemplateFile" value="${report.vacancies.template.file}"/>
    </bean>

    <!-- Method Security -->

    <sec:global-method-security pre-post-annotations="enabled">
        <sec:expression-handler ref="methodSecurityExpressionHandler"/>
    </sec:global-method-security>

    <!-- ACL security aspects -->

    <bean class="com.itechart.security.hibernate.aop.AclHibernateSecurityAspect">
        <property name="filterParamsBuilder">
            <bean class="com.itechart.security.hibernate.filter.FilterParamsBuilder">
                <property name="securityRepository" ref="securityRepository"/>
                <property name="roleHierarchy" ref="roleHierarchy"/>
            </bean>
        </property>
    </bean>


    <context:property-placeholder location="classpath*:businessServices.properties, classpath*:opportunity.properties"
                                  ignore-unresolvable="true"/>
</beans>

@import "../../../../../public/css/color";

@function remy($value) {
  @return ($value / 16px) * 1rem;
}

.crm-font-size {
  font-size: 0.8125rem;
}

.input-height {
  height: 2.1rem;
}

.general-info {

  form {
    .input-field {
      input {
        font-size: remy(13px);
        height: 2rem;
      }

      label {

        font-size: remy(13px);

        &.active {
          font-size: remy(12px);
        }

        &:after {
          top: 47px;
        }
      }
    }

    .checkbox-inner {
      position: absolute;
      right: 0;
      bottom: 13px;
    }

    .checkbox-list {
      height: 120px;
      overflow: auto;
    }

    [type="checkbox"].filled-in + label:after {
      height: 16px;
      width: 16px;
      border: 1px solid #607D8B;
      margin-top: 4px;
      border-radius: 1px;
    }
    [type="checkbox"].filled-in:checked + label:after {
      height: 16px;
      width: 16px;
      border: 2px solid #26a69a;
      background-color: #26a69a;
      margin-top: 4px;
      border-radius: 1px;
    }
    [type="checkbox"].filled-in:checked + label:before {
      top: 0;
      left: -1px;
      margin-top: 4px;
    }

    .row:last-child .input-field input {
      margin-bottom: 10px;
    }
  }
}

.autocomplete-content {
  margin-top: 0px !important;
}

.z-depth-1 {
  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.23);
}

.input-field {
  .ng-touched.ng-invalid {
    border-bottom: 1px solid map-deep-get($colors, red, 500);
    box-shadow: 0 1px 0 0 map-deep-get($colors, red, 500);
  }

  .ng-touched.ng-invalid {
    &:focus {
      box-shadow: 0 1px 0 0 map-deep-get($colors, red, 500);
      border-bottom: 1px solid map-deep-get($colors, red, 500);
    }
  }
}

.error-div {
  margin-top: -15px;
  label {
    color: map-deep-get($colors, red, 500);
  }
}

.error-message{
  color: map-deep-get($colors, red, 500);
}




